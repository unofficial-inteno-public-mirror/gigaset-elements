#!/bin/sh


FUNCTIONS=""

usage()
{
    cat << EOF
usage: $0 <command> [args]

COMMAND:
net_ready               - network ready event
bs_reg                  - start BS registration
sens_reg <timeout>      - start sensor registration, stop after <timeout> (default 10s)
set_devid <devid>       - set device id to uci configuration (generate new if empty)

EOF
}


# Return default wan interface
#
get_def_interface()
{
    local ifname="$(ip r | grep default | awk '{print$5}')"
    if [ -n "$ifname" ]; then
        echo $ifname
        return
    fi

    local wan_ifnames=$(uci get network.wan.ifname)
    for ifname in ${wan_ifnames}
    do
        if [ -n "$ifname" ]; then
            echo $ifname
            return
        fi
    done

    echo "default interface not found" >&2
    exit 1
}


# Return MAC address of the given interface
#
get_mac()
{
    local ifname="$1"

    local mac=$(cat /sys/class/net/${ifname}/address)
    # convert to upercase
    mac=$(echo ${mac} | tr "[a-z]" "[A-Z]")
    # remove colons
    mac=$(echo ${mac} | tr -d ":")

    echo ${mac}
}






net_ready()
{
    touch /var/run/lan.ok
    echo -e "{\"link\": true}" | /usr/bin/sender 127.0.0.1 network
}
FUNCTIONS="${FUNCTIONS} net_ready"


bs_reg()
{
    echo -e "{\"key\": 0, \"value\": false, \"longpress\": false}" | /usr/bin/sender 127.0.0.1 keyboard
}
FUNCTIONS="${FUNCTIONS} bs_reg"


sens_reg()
{
    local TIMEOUT=$1
    [ -n "$TIMEOUT" ] || TIMEOUT=10

    echo -e "{\"key\": 0, \"value\": true, \"longpress\": true}" | /usr/bin/sender 127.0.0.1 keyboard
    sleep $TIMEOUT
    echo -e "{\"key\": 0, \"value\": false, \"longpress\": true}" | /usr/bin/sender 127.0.0.1 keyboard
}
FUNCTIONS="${FUNCTIONS} sens_reg"


set_devid()
{
    local deviceid=$1
    local conf_file="/etc/config/gigaset"
    if [ ! -e "$conf_file" ]; then
        # generate device id
        if [ -z "$deviceid" ]; then
            ifname=$(get_def_interface)
            ifmac=$(get_mac ${ifname})
            [ -z "$ifmac" ] && exit 1
            deviceid="INTENOXXXXXXXXXXXXXX${ifmac}"
        fi

        touch $conf_file
        uci set gigaset.elements=gigaset
        uci set gigaset.elements.deviceid="$deviceid"
        uci commit
    fi
}
FUNCTIONS="${FUNCTIONS} set_devid"





COMMAND=$1
shift
ARGS="$@"

# iterate through commands
for i in ${FUNCTIONS}
do
    if [ x"${COMMAND}" = x"${i}" ]; then
        # run command function and exit
        $COMMAND $ARGS
        exit 0
    fi
done


# command not known
usage
exit 1

